<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="1">
  <HTTPTask id="1" hostname="learning2.pflb.ru:56902" path="/login" url="http://learning2.pflb.ru:56902/login" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1036" connectionId="2152" origin="Primary" encodingType="ANSI" startDateTime="2019-11-28T17:15:29.244+03:00" startTime="2115" endTime="2357" blockedTime="-1" dnsTime="1" connectTime="0" sendTime="1" waitTime="222" receiveTime="8" sslNegotiateTime="-1" responseBodySize="1268">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="User-Agent" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnUtUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9sb2dpbiBIVFRQLzEuMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUtUlUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBsZWFybmluZzIucGZsYi5ydTo1NjkwMg0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>873</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGUsIG5vLXN0b3JlLCBtYXgtYWdlPTAsIG11c3QtcmV2YWxpZGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Pragma" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0FNRU9SSUdJTg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Language" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnUtUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ODcz</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KWC1Db250ZW50LVR5cGUtT3B0aW9uczogbm9zbmlmZg0KWC1YU1MtUHJvdGVjdGlvbjogMTsgbW9kZT1ibG9jaw0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG5vLXN0b3JlLCBtYXgtYWdlPTAsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KRXhwaXJlczogMA0KWC1GcmFtZS1PcHRpb25zOiBTQU1FT1JJR0lODQpMYXN0LU1vZGlmaWVkOiBUdWUsIDI3IE5vdiAyMDE4IDE0OjAzOjQzIEdNVA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sO2NoYXJzZXQ9VVRGLTgNCkNvbnRlbnQtTGFuZ3VhZ2U6IHJ1LVJVDQpDb250ZW50LUxlbmd0aDogODczDQpEYXRlOiBUaHUsIDI4IE5vdiAyMDE5IDE0OjE1OjMxIEdNVA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InJ1Ij4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCIvPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlLCBjaHJvbWU9MSIgLz4KICAgIDx0aXRsZT7QkNCy0YLQvtGA0LjQt9Cw0YbQuNGPPC90aXRsZT4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iY3NzL2NvcmUvbWF0ZXJpYWxfaWNvbnMuY3NzIj4KICAgIDxsaW5rIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNzcy9jb3JlL21hdGVyaWFsaXplLmNzcyIgbWVkaWE9InNjcmVlbixwcm9qZWN0aW9uIi8+CiAgICA8bGluayB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJjc3Mvc3R5bGUuY3NzIj4KPC9oZWFkPgo8Ym9keT4KPGRpdiBpZD0ibG9naW5fcGFnZV93cmFwcGVyIj48L2Rpdj4KPC9ib2R5Pgo8c2NyaXB0IHNyYz0ianMvY29yZS9sZWdhY3kuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0ianMvY29yZS9qcXVlcnktMy4xLjEuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0ianMvY29yZS9kdXN0LmpzIj48L3NjcmlwdD4KPHNjcmlwdCBzcmM9ImpzL2NvcmUvanF1ZXJ5LmNvb2tpZS5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImpzL2NvcmUvbWF0ZXJpYWxpemUuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqcy9wYWdlL2F1dGhvcmlzYXRpb24uanMiPjwvc2NyaXB0Pgo8L2h0bWw+</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
    <HTTPTask id="2" hostname="learning2.pflb.ru:56902" path="/css/core/material_icons.css" url="http://learning2.pflb.ru:56902/css/core/material_icons.css" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1037" connectionId="2160" origin="HTML" encodingType="ANSI" ordinal="1" startDateTime="2019-11-28T17:15:29.492+03:00" startTime="2363" endTime="2374" blockedTime="-1" dnsTime="-1" connectTime="0" sendTime="1" waitTime="8" receiveTime="0" sslNegotiateTime="-1" responseBodySize="1383">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnUtUlU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9jc3MvY29yZS9tYXRlcmlhbF9pY29ucy5jc3MgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9sZWFybmluZzIucGZsYi5ydTo1NjkwMi9sb2dpbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUtUlUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBsZWFybmluZzIucGZsYi5ydTo1NjkwMg0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>1201</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Last-Modified" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M7Y2hhcnNldD1VVEYtOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTIwMQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IHRleHQvY3NzO2NoYXJzZXQ9VVRGLTgNCkNvbnRlbnQtTGVuZ3RoOiAxMjAxDQpEYXRlOiBUaHUsIDI4IE5vdiAyMDE5IDE0OjE1OjMxIEdNVA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QGZvbnQtZmFjZSB7CiAgICBmb250LWZhbWlseTogJ01hdGVyaWFsIEljb25zJzsKICAgIGZvbnQtc3R5bGU6IG5vcm1hbDsKICAgIGZvbnQtd2VpZ2h0OiA0MDA7CiAgICBzcmM6IHVybCgnLi4vZm9udHMvbWF0ZXJpYWxfaWNvbnMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLmVvdCcpOyAvKiBGb3IgSUU2LTggKi8KICAgIHNyYzogbG9jYWwoJ01hdGVyaWFsIEljb25zJyksCiAgICBsb2NhbCgnTWF0ZXJpYWxJY29ucy1SZWd1bGFyJyksCiAgICB1cmwoJy4uL2ZvbnRzL21hdGVyaWFsX2ljb25zL01hdGVyaWFsSWNvbnMtUmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwKICAgIHVybCgnLi4vZm9udHMvbWF0ZXJpYWxfaWNvbnMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSwKICAgIHVybCgnLi4vZm9udHMvbWF0ZXJpYWxfaWNvbnMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSwKICAgIHVybCgnLi4vZm9udHMvbWF0ZXJpYWxfaWNvbnMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLnN2ZycpIGZvcm1hdCgnc3ZnJyk7Cn0KCi5tYXRlcmlhbC1pY29ucyB7CiAgICBmb250LWZhbWlseTogJ01hdGVyaWFsIEljb25zJzsKICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7CiAgICBmb250LXN0eWxlOiBub3JtYWw7CiAgICBmb250LXNpemU6IDI0cHg7CiAgICBsaW5lLWhlaWdodDogMTsKICAgIGxldHRlci1zcGFjaW5nOiBub3JtYWw7CiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgICB3b3JkLXdyYXA6IG5vcm1hbDsKICAgIGRpcmVjdGlvbjogbHRyOwogICAgLXdlYmtpdC1mb250LWZlYXR1cmUtc2V0dGluZ3M6ICdsaWdhJzsKCiAgICAvKiBTdXBwb3J0IGZvciBhbGwgV2ViS2l0IGJyb3dzZXJzLiAqLwogICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgICAvKiBTdXBwb3J0IGZvciBTYWZhcmkgYW5kIENocm9tZS4gKi8KICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7CgogICAgLyogU3VwcG9ydCBmb3IgRmlyZWZveC4gKi8KICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7CgogICAgLyogU3VwcG9ydCBmb3IgSUUuICovCiAgICBmb250LWZlYXR1cmUtc2V0dGluZ3M6ICdsaWdhJzsKfQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3" hostname="learning2.pflb.ru:56902" path="/css/core/materialize.css" url="http://learning2.pflb.ru:56902/css/core/materialize.css" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1038" connectionId="2168" origin="HTML" encodingType="ANSI" ordinal="2" startDateTime="2019-11-28T17:15:29.493+03:00" startTime="2364" endTime="2490" blockedTime="-1" dnsTime="-1" connectTime="-1" sendTime="1" waitTime="36" receiveTime="83" sslNegotiateTime="-1" responseBodySize="177744">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnUtUlU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9jc3MvY29yZS9tYXRlcmlhbGl6ZS5jc3MgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9sZWFybmluZzIucGZsYi5ydTo1NjkwMi9sb2dpbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUtUlUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBsZWFybmluZzIucGZsYi5ydTo1NjkwMg0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>177560</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Last-Modified" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M7Y2hhcnNldD1VVEYtOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTc3NTYw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IHRleHQvY3NzO2NoYXJzZXQ9VVRGLTgNCkNvbnRlbnQtTGVuZ3RoOiAxNzc1NjANCkRhdGU6IFRodSwgMjggTm92IDIwMTkgMTQ6MTU6MzEgR01UDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="4" hostname="learning2.pflb.ru:56902" path="/css/style.css" url="http://learning2.pflb.ru:56902/css/style.css" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1039" connectionId="2176" origin="HTML" encodingType="ANSI" ordinal="3" startDateTime="2019-11-28T17:15:29.493+03:00" startTime="2364" endTime="2475" blockedTime="-1" dnsTime="-1" connectTime="-1" sendTime="1" waitTime="43" receiveTime="67" sslNegotiateTime="-1" responseBodySize="49378">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnUtUlU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9jc3Mvc3R5bGUuY3NzIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vbGVhcm5pbmcyLnBmbGIucnU6NTY5MDIvbG9naW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0OyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbw0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHJ1LVJVDQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogbGVhcm5pbmcyLnBmbGIucnU6NTY5MDINCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>49195</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Last-Modified" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M7Y2hhcnNldD1VVEYtOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDkxOTU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IHRleHQvY3NzO2NoYXJzZXQ9VVRGLTgNCkNvbnRlbnQtTGVuZ3RoOiA0OTE5NQ0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="5" hostname="learning2.pflb.ru:56902" path="/js/core/legacy.js" url="http://learning2.pflb.ru:56902/js/core/legacy.js" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1040" connectionId="2184" origin="HTML" encodingType="ANSI" ordinal="4" startDateTime="2019-11-28T17:15:29.493+03:00" startTime="2364" endTime="2414" blockedTime="-1" dnsTime="-1" connectTime="-1" sendTime="1" waitTime="43" receiveTime="6" sslNegotiateTime="-1" responseBodySize="633">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnUtUlU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9qcy9jb3JlL2xlZ2FjeS5qcyBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2luDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgVHJpZGVudC83LjA7IHJ2OjExLjApIGxpa2UgR2Vja28NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBydS1SVQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IGxlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>438</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Last-Modified" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDM4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1MZW5ndGg6IDQzOA0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aWYoIUFycmF5LnByb3RvdHlwZS5maW5kKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoQXJyYXkucHJvdG90eXBlLCdmaW5kJyx7dmFsdWU6ZnVuY3Rpb24ocHJlZGljYXRlKXtpZih0aGlzPT1udWxsKXt0aHJvdyBuZXcgVHlwZUVycm9yKCcidGhpcyIgaXMgbnVsbCBvciBub3QgZGVmaW5lZCcpO312YXIgbz1PYmplY3QodGhpcyk7dmFyIGxlbj1vLmxlbmd0aD4+PjA7aWYodHlwZW9mIHByZWRpY2F0ZSE9PSdmdW5jdGlvbicpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ3ByZWRpY2F0ZSBtdXN0IGJlIGEgZnVuY3Rpb24nKTt9dmFyIHRoaXNBcmc9YXJndW1lbnRzWzFdO3ZhciBrPTA7d2hpbGUgKGs8bGVuKXt2YXIga1ZhbHVlPW9ba107aWYocHJlZGljYXRlLmNhbGwodGhpc0FyZyxrVmFsdWUsayxvKSl7cmV0dXJuIGtWYWx1ZTt9aysrO31yZXR1cm4gdW5kZWZpbmVkO319KTt9</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="6" hostname="learning2.pflb.ru:56902" path="/js/core/jquery-3.1.1.js" url="http://learning2.pflb.ru:56902/js/core/jquery-3.1.1.js" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1041" connectionId="2192" origin="HTML" encodingType="ANSI" ordinal="5" startDateTime="2019-11-28T17:15:29.493+03:00" startTime="2364" endTime="2677" blockedTime="-1" dnsTime="-1" connectTime="0" sendTime="0" waitTime="51" receiveTime="261" sslNegotiateTime="-1" responseBodySize="267392">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnUtUlU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9qcy9jb3JlL2pxdWVyeS0zLjEuMS5qcyBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2luDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgVHJpZGVudC83LjA7IHJ2OjExLjApIGxpa2UgR2Vja28NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBydS1SVQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IGxlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>267194</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Last-Modified" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjY3MTk0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1MZW5ndGg6IDI2NzE5NA0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="7" hostname="learning2.pflb.ru:56902" path="/js/core/dust.js" url="http://learning2.pflb.ru:56902/js/core/dust.js" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1036" connectionId="2152" origin="HTML" encodingType="ANSI" ordinal="6" startDateTime="2019-11-28T17:15:29.492+03:00" startTime="2363" endTime="2454" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="1" waitTime="3" receiveTime="86" sslNegotiateTime="-1" responseBodySize="162824">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnUtUlU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9qcy9jb3JlL2R1c3QuanMgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9sZWFybmluZzIucGZsYi5ydTo1NjkwMi9sb2dpbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUtUlUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBsZWFybmluZzIucGZsYi5ydTo1NjkwMg0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>162626</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Last-Modified" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTYyNjI2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1MZW5ndGg6IDE2MjYyNg0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="8" hostname="learning2.pflb.ru:56902" path="/js/core/jquery.cookie.js" url="http://learning2.pflb.ru:56902/js/core/jquery.cookie.js" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1037" connectionId="2160" origin="HTML" encodingType="ANSI" ordinal="7" startDateTime="2019-11-28T17:15:29.529+03:00" startTime="2400" endTime="2456" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="56" waitTime="0" receiveTime="0" sslNegotiateTime="-1" responseBodySize="3317">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnUtUlU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9qcy9jb3JlL2pxdWVyeS5jb29raWUuanMgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9sZWFybmluZzIucGZsYi5ydTo1NjkwMi9sb2dpbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUtUlUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBsZWFybmluZzIucGZsYi5ydTo1NjkwMg0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>3121</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Last-Modified" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzEyMQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1MZW5ndGg6IDMxMjENCkRhdGU6IFRodSwgMjggTm92IDIwMTkgMTQ6MTU6MzEgR01UDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>LyohCiAqIGpRdWVyeSBDb29raWUgUGx1Z2luIHYxLjQuMQogKiBodHRwczovL2dpdGh1Yi5jb20vY2FyaGFydGwvanF1ZXJ5LWNvb2tpZQogKgogKiBDb3B5cmlnaHQgMjAxMyBLbGF1cyBIYXJ0bAogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UKICovCihmdW5jdGlvbiAoZmFjdG9yeSkgewoJaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewoJCS8vIEFNRAoJCWRlZmluZShbJ2pxdWVyeSddLCBmYWN0b3J5KTsKCX0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CgkJLy8gQ29tbW9uSlMKCQlmYWN0b3J5KHJlcXVpcmUoJ2pxdWVyeScpKTsKCX0gZWxzZSB7CgkJLy8gQnJvd3NlciBnbG9iYWxzCgkJZmFjdG9yeShqUXVlcnkpOwoJfQp9KGZ1bmN0aW9uICgkKSB7CgoJdmFyIHBsdXNlcyA9IC9cKy9nOwoKCWZ1bmN0aW9uIGVuY29kZShzKSB7CgkJcmV0dXJuIGNvbmZpZy5yYXcgPyBzIDogZW5jb2RlVVJJQ29tcG9uZW50KHMpOwoJfQoKCWZ1bmN0aW9uIGRlY29kZShzKSB7CgkJcmV0dXJuIGNvbmZpZy5yYXcgPyBzIDogZGVjb2RlVVJJQ29tcG9uZW50KHMpOwoJfQoKCWZ1bmN0aW9uIHN0cmluZ2lmeUNvb2tpZVZhbHVlKHZhbHVlKSB7CgkJcmV0dXJuIGVuY29kZShjb25maWcuanNvbiA/IEpTT04uc3RyaW5naWZ5KHZhbHVlKSA6IFN0cmluZyh2YWx1ZSkpOwoJfQoKCWZ1bmN0aW9uIHBhcnNlQ29va2llVmFsdWUocykgewoJCWlmIChzLmluZGV4T2YoJyInKSA9PT0gMCkgewoJCQkvLyBUaGlzIGlzIGEgcXVvdGVkIGNvb2tpZSBhcyBhY2NvcmRpbmcgdG8gUkZDMjA2OCwgdW5lc2NhcGUuLi4KCQkJcyA9IHMuc2xpY2UoMSwgLTEpLnJlcGxhY2UoL1xcIi9nLCAnIicpLnJlcGxhY2UoL1xcXFwvZywgJ1xcJyk7CgkJfQoKCQl0cnkgewoJCQkvLyBSZXBsYWNlIHNlcnZlci1zaWRlIHdyaXR0ZW4gcGx1c2VzIHdpdGggc3BhY2VzLgoJCQkvLyBJZiB3ZSBjYW4ndCBkZWNvZGUgdGhlIGNvb2tpZSwgaWdub3JlIGl0LCBpdCdzIHVudXNhYmxlLgoJCQkvLyBJZiB3ZSBjYW4ndCBwYXJzZSB0aGUgY29va2llLCBpZ25vcmUgaXQsIGl0J3MgdW51c2FibGUuCgkJCXMgPSBkZWNvZGVVUklDb21wb25lbnQocy5yZXBsYWNlKHBsdXNlcywgJyAnKSk7CgkJCXJldHVybiBjb25maWcuanNvbiA/IEpTT04ucGFyc2UocykgOiBzOwoJCX0gY2F0Y2goZSkge30KCX0KCglmdW5jdGlvbiByZWFkKHMsIGNvbnZlcnRlcikgewoJCXZhciB2YWx1ZSA9IGNvbmZpZy5yYXcgPyBzIDogcGFyc2VDb29raWVWYWx1ZShzKTsKCQlyZXR1cm4gJC5pc0Z1bmN0aW9uKGNvbnZlcnRlcikgPyBjb252ZXJ0ZXIodmFsdWUpIDogdmFsdWU7Cgl9CgoJdmFyIGNvbmZpZyA9ICQuY29va2llID0gZnVuY3Rpb24gKGtleSwgdmFsdWUsIG9wdGlvbnMpIHsKCgkJLy8gV3JpdGUKCgkJaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYgISQuaXNGdW5jdGlvbih2YWx1ZSkpIHsKCQkJb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBjb25maWcuZGVmYXVsdHMsIG9wdGlvbnMpOwoKCQkJaWYgKHR5cGVvZiBvcHRpb25zLmV4cGlyZXMgPT09ICdudW1iZXInKSB7CgkJCQl2YXIgZGF5cyA9IG9wdGlvbnMuZXhwaXJlcywgdCA9IG9wdGlvbnMuZXhwaXJlcyA9IG5ldyBEYXRlKCk7CgkJCQl0LnNldFRpbWUoK3QgKyBkYXlzICogODY0ZSs1KTsKCQkJfQoKCQkJcmV0dXJuIChkb2N1bWVudC5jb29raWUgPSBbCgkJCQllbmNvZGUoa2V5KSwgJz0nLCBzdHJpbmdpZnlDb29raWVWYWx1ZSh2YWx1ZSksCgkJCQlvcHRpb25zLmV4cGlyZXMgPyAnOyBleHBpcmVzPScgKyBvcHRpb25zLmV4cGlyZXMudG9VVENTdHJpbmcoKSA6ICcnLCAvLyB1c2UgZXhwaXJlcyBhdHRyaWJ1dGUsIG1heC1hZ2UgaXMgbm90IHN1cHBvcnRlZCBieSBJRQoJCQkJb3B0aW9ucy5wYXRoICAgID8gJzsgcGF0aD0nICsgb3B0aW9ucy5wYXRoIDogJycsCgkJCQlvcHRpb25zLmRvbWFpbiAgPyAnOyBkb21haW49JyArIG9wdGlvbnMuZG9tYWluIDogJycsCgkJCQlvcHRpb25zLnNlY3VyZSAgPyAnOyBzZWN1cmUnIDogJycKCQkJXS5qb2luKCcnKSk7CgkJfQoKCQkvLyBSZWFkCgoJCXZhciByZXN1bHQgPSBrZXkgPyB1bmRlZmluZWQgOiB7fTsKCgkJLy8gVG8gcHJldmVudCB0aGUgZm9yIGxvb3AgaW4gdGhlIGZpcnN0IHBsYWNlIGFzc2lnbiBhbiBlbXB0eSBhcnJheQoJCS8vIGluIGNhc2UgdGhlcmUgYXJlIG5vIGNvb2tpZXMgYXQgYWxsLiBBbHNvIHByZXZlbnRzIG9kZCByZXN1bHQgd2hlbgoJCS8vIGNhbGxpbmcgJC5jb29raWUoKS4KCQl2YXIgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZSA/IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOyAnKSA6IFtdOwoKCQlmb3IgKHZhciBpID0gMCwgbCA9IGNvb2tpZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CgkJCXZhciBwYXJ0cyA9IGNvb2tpZXNbaV0uc3BsaXQoJz0nKTsKCQkJdmFyIG5hbWUgPSBkZWNvZGUocGFydHMuc2hpZnQoKSk7CgkJCXZhciBjb29raWUgPSBwYXJ0cy5qb2luKCc9Jyk7CgoJCQlpZiAoa2V5ICYmIGtleSA9PT0gbmFtZSkgewoJCQkJLy8gSWYgc2Vjb25kIGFyZ3VtZW50ICh2YWx1ZSkgaXMgYSBmdW5jdGlvbiBpdCdzIGEgY29udmVydGVyLi4uCgkJCQlyZXN1bHQgPSByZWFkKGNvb2tpZSwgdmFsdWUpOwoJCQkJYnJlYWs7CgkJCX0KCgkJCS8vIFByZXZlbnQgc3RvcmluZyBhIGNvb2tpZSB0aGF0IHdlIGNvdWxkbid0IGRlY29kZS4KCQkJaWYgKCFrZXkgJiYgKGNvb2tpZSA9IHJlYWQoY29va2llKSkgIT09IHVuZGVmaW5lZCkgewoJCQkJcmVzdWx0W25hbWVdID0gY29va2llOwoJCQl9CgkJfQoKCQlyZXR1cm4gcmVzdWx0OwoJfTsKCgljb25maWcuZGVmYXVsdHMgPSB7fTsKCgkkLnJlbW92ZUNvb2tpZSA9IGZ1bmN0aW9uIChrZXksIG9wdGlvbnMpIHsKCQlpZiAoJC5jb29raWUoa2V5KSA9PT0gdW5kZWZpbmVkKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCS8vIE11c3Qgbm90IGFsdGVyIG9wdGlvbnMsIHRodXMgZXh0ZW5kaW5nIGEgZnJlc2ggb2JqZWN0Li4uCgkJJC5jb29raWUoa2V5LCAnJywgJC5leHRlbmQoe30sIG9wdGlvbnMsIHsgZXhwaXJlczogLTEgfSkpOwoJCXJldHVybiAhJC5jb29raWUoa2V5KTsKCX07Cgp9KSk7Cg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="9" hostname="learning2.pflb.ru:56902" path="/js/core/materialize.js" url="http://learning2.pflb.ru:56902/js/core/materialize.js" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1040" connectionId="2184" origin="HTML" encodingType="ANSI" ordinal="8" startDateTime="2019-11-28T17:15:29.545+03:00" startTime="2416" endTime="2563" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="77" waitTime="0" receiveTime="68" sslNegotiateTime="-1" responseBodySize="346642">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnUtUlU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9qcy9jb3JlL21hdGVyaWFsaXplLmpzIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vbGVhcm5pbmcyLnBmbGIucnU6NTY5MDIvbG9naW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0OyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbw0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHJ1LVJVDQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogbGVhcm5pbmcyLnBmbGIucnU6NTY5MDINCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>346444</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Last-Modified" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzQ2NDQ0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1MZW5ndGg6IDM0NjQ0NA0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="10" hostname="learning2.pflb.ru:56902" path="/js/page/authorisation.js" url="http://learning2.pflb.ru:56902/js/page/authorisation.js" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1036" connectionId="2152" origin="HTML" encodingType="ANSI" ordinal="9" startDateTime="2019-11-28T17:15:29.584+03:00" startTime="2455" endTime="2484" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="2" waitTime="19" receiveTime="7" sslNegotiateTime="-1" responseBodySize="4185">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnUtUlU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9qcy9wYWdlL2F1dGhvcmlzYXRpb24uanMgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9sZWFybmluZzIucGZsYi5ydTo1NjkwMi9sb2dpbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUtUlUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBsZWFybmluZzIucGZsYi5ydTo1NjkwMg0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>3989</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Last-Modified" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Mzk4OQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1MZW5ndGg6IDM5ODkNCkRhdGU6IFRodSwgMjggTm92IDIwMTkgMTQ6MTU6MzEgR01UDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>JChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkgewogICAgJC5jb29raWUoJ2ZpbHRlclNldHRpbmcnLCAnJywgeyBleHBpcmVzOiAtMSB9KTsKICAgICQuYWpheCh7CiAgICAgICAgdXJsOiAndHBsL2xvZ2luL2xvZ2luLmR1c3QnLAogICAgICAgIGNvbnRlbnRUeXBlOiAiY2hhcnNldD11dGYtOCIKICAgIH0pLmRvbmUoZnVuY3Rpb24gKHRlbXBsYXRlKSB7CiAgICAgICAgdmFyIGNvbXBhbnlJZDsKICAgICAgICAkLmNvb2tpZSgnY3VycmVudENvbXBhbnknKSAhPSB1bmRlZmluZWQgPyBjb21wYW55SWQgPSAkLmNvb2tpZSgnY3VycmVudENvbXBhbnknKSA6IGNvbXBhbnlJZCA9IDA7CiAgICAgICAgZHVzdC5yZW5kZXJTb3VyY2UodGVtcGxhdGUsIHtjb21wYW55OiBjb21wYW55SWR9LCBmdW5jdGlvbiAoZXJyLCBvdXQpIHsKICAgICAgICAgICAgdmFyICRsb2dpbiA9ICQoIiNsb2dpbl9wYWdlX3dyYXBwZXIiKTsKICAgICAgICAgICAgJGxvZ2luLmVtcHR5KCk7CiAgICAgICAgICAgICRsb2dpbi5hcHBlbmQob3V0KTsKICAgICAgICB9KTsKCiAgICAgICAgaWYgKCQuY29va2llKCdzZXNzaW9uRXhwaXJlZCcpID09ICJ0cnVlIikgewogICAgICAgICAgICBNYXRlcmlhbGl6ZS50b2FzdCgn0KHQtdGB0YHQuNGPINC40YHRgtC10LrQu9CwLCDQv9C+0LbQsNC70YPQudGB0YLQsCwg0LDQstGC0L7RgNC40LfRg9C50YLQtdGB0YwnLCAzMDAwKTsKICAgICAgICAgICAgJC5jb29raWUoJ3Nlc3Npb25FeHBpcmVkJywgZmFsc2UpOwogICAgICAgIH0KCiAgICAgICAgdmFyIGxvZ2luRmllbGQgPSAkKCcjbG9naW5fZmllbGQnKTsKICAgICAgICB2YXIgcGFzc3dvcmRGaWVsZCA9ICQoJyNwYXNzd29yZF9maWVsZCcpOwogICAgICAgIHZhciByZW1lbWJlck1lRmllbGQgPSAkKCcjcmVtZW1iZXJfbWVfZmllbGQnKTsKICAgICAgICAkKCcjYXV0aF9mb3JtJykuc3VibWl0KGZ1bmN0aW9uIChldmVudCkgewoKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgaWYgKGZvcm1WYWxpZGF0aW9uKGxvZ2luRmllbGQsIHBhc3N3b3JkRmllbGQpKSB7CiAgICAgICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgICAgICAgICAgICAgICB1cmw6ICJhcGkvbG9naW4iLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgICAgICAgbG9naW46IGxvZ2luRmllbGQudmFsKCksCiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZEZpZWxkLnZhbCgpLAogICAgICAgICAgICAgICAgICAgICAgICByZW1lbWJlck1lOiByZW1lbWJlck1lRmllbGQucHJvcCgiY2hlY2tlZCIpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkuZG9uZShmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgIC8vZGVidWdnZXI7CiAgICAgICAgICAgICAgICAgICAgLy/Qn9C+0LvRg9GH0LDQtdC8INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjNGB0LrQuNC1INC00LDQvdC90YvQtQogICAgICAgICAgICAgICAgICAgIHZhciB1c2VyID0gSlNPTi5wYXJzZShkYXRhKSwKICAgICAgICAgICAgICAgICAgICAgICAgY29tcGFueUlkID0gdXNlci5jb21wYW55SWQgPyB1c2VyLmNvbXBhbnlJZCA6IDAsCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lID0gdXNlci5mdWxsTmFtZSA/IHVzZXIuZnVsbE5hbWUgOiB1c2VyLmxvZ2luOwoKICAgICAgICAgICAgICAgICAgICAvL9Cb0L7QstC40Lwg0YHQsNC/0LAKICAgICAgICAgICAgICAgICAgICB2YXIgdXNlclN1cHBvcnQgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICBpZiAodXNlci5yb2xlcykgewogICAgICAgICAgICAgICAgICAgICAgICB1c2VyLnJvbGVzLmZvckVhY2goZnVuY3Rpb24gKHJvbGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyb2xlLm5hbWUgPT0gIlJPTEVfU1VQUE9SVCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyU3VwcG9ydCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAkLmNvb2tpZSgnY3VycmVudENvbXBhbnknLCBjb21wYW55SWQsIHtleHBpcmVzOiA2NjZ9KTsKICAgICAgICAgICAgICAgICAgICAkLmNvb2tpZSgnY3VycmVudFVzZXInLCB1c2VyTmFtZSwge2V4cGlyZXM6IDY2Nn0pOwoKICAgICAgICAgICAgICAgICAgICBpZiAobG9naW5GaWVsZC5oYXNDbGFzcygnaW52YWxpZCcpKSBsb2dpbkZpZWxkLnJlbW92ZUNsYXNzKCdpbnZhbGlkJyk7CiAgICAgICAgICAgICAgICAgICAgaWYgKHBhc3N3b3JkRmllbGQuaGFzQ2xhc3MoJ2ludmFsaWQnKSkgcGFzc3dvcmRGaWVsZC5yZW1vdmVDbGFzcygnaW52YWxpZCcpOwogICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcmVMb2dpbkxpbmsgPSBKU09OLnBhcnNlKCQuY29va2llKCdQRkxCLnByZS5sb2dpbi5saW5rJykpOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJlTG9naW5MaW5rLnVybCB8fCBwcmVMb2dpbkxpbmsudXJsICE9ICd1bmRlZmluZWQnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBwcmVMb2dpbkxpbmsudXJsICsgd2luZG93LmxvY2F0aW9uLmhhc2g7CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24uaG9zdDsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9ICcvJzsKCiAgICAgICAgICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgICAgICAgICAgJC5jb29raWUoJ1BGTEIucHJlLmxvZ2luLmxpbmsnLCBudWxsKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgfSkuZmFpbChmdW5jdGlvbiAoWEhSKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCFsb2dpbkZpZWxkLmhhc0NsYXNzKCdpbnZhbGlkJykpIGxvZ2luRmllbGQuYWRkQ2xhc3MoJ2ludmFsaWQnKTsKICAgICAgICAgICAgICAgICAgICBpZiAoIXBhc3N3b3JkRmllbGQuaGFzQ2xhc3MoJ2ludmFsaWQnKSkgcGFzc3dvcmRGaWVsZC5hZGRDbGFzcygnaW52YWxpZCcpOwogICAgICAgICAgICAgICAgICAgIE1hdGVyaWFsaXplLnRvYXN0KFhIUi5yZXNwb25zZUpTT04ubWVzc2FnZSwgMzAwMCk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9KTsKfSk7CgovL9CS0LDQu9C40LTQuNGA0YPQtdC8INGE0L7RgNC80YMg0LDQstGC0L7RgNC40LfQsNGG0LjQuApmdW5jdGlvbiBmb3JtVmFsaWRhdGlvbihsb2dpbkZpZWxkLCBwYXNzd29yZEZpZWxkKSB7CiAgICBpZiAobG9naW5GaWVsZC52YWwoKSA9PSAnJykgewogICAgICAgIE1hdGVyaWFsaXplLnRvYXN0KCfQktCy0LXQtNC40YLQtSDQuNC80Y8g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPJywgMzAwMCk7CiAgICAgICAgaWYgKCFsb2dpbkZpZWxkLmhhc0NsYXNzKCdpbnZhbGlkJykpIGxvZ2luRmllbGQuYWRkQ2xhc3MoJ2ludmFsaWQnKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9IGVsc2UgaWYgKHBhc3N3b3JkRmllbGQudmFsKCkgPT0gJycpIHsKICAgICAgICBNYXRlcmlhbGl6ZS50b2FzdCgn0JLQstC10LTQuNGC0LUg0L/QsNGA0L7Qu9GMJywgMzAwMCk7CiAgICAgICAgaWYgKCFwYXNzd29yZEZpZWxkLmhhc0NsYXNzKCdpbnZhbGlkJykpIHBhc3N3b3JkRmllbGQuYWRkQ2xhc3MoJ2ludmFsaWQnKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9IGVsc2UgcmV0dXJuIHRydWU7Cn0=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
  <HTTPTask id="11" hostname="learning2.pflb.ru:56902" path="/tpl/login/login.dust" url="http://learning2.pflb.ru:56902/tpl/login/login.dust" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1037" connectionId="2160" origin="ExtraRes" encodingType="ANSI" ordinal="1" startDateTime="2019-11-28T17:15:29.587+03:00" startTime="2458" endTime="2583" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="27" waitTime="0" receiveTime="97" sslNegotiateTime="-1" responseBodySize="1788">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnUtUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC90cGwvbG9naW4vbG9naW4uZHVzdCBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2luDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgVHJpZGVudC83LjA7IHJ2OjExLjApIGxpa2UgR2Vja28NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBydS1SVQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IGxlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>1590</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Last-Modified" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTU5MA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMTU5MA0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>PGRpdiBjbGFzcz0iY29udGFpbmVyIiBzdHlsZT0ibWFyZ2luLXRvcDogMzBweDsiPgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgbDYgb2Zmc2V0LWwzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBsMTIgczEyIG0xMiI+CiAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT0id2lkdGg6IDEwMCU7IiBzcmM9Ii4uL2ltYWdlcy9sb2dvXzIucG5nIj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBsMTIgbTEyIHMxMiI+CiAgICAgICAgICAgICAgICAgICAgPGZvcm0gaWQ9ImF1dGhfZm9ybSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWZpZWxkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0ibG9naW5fZmllbGQiIG5hbWU9ImxvZ2luIiB0eXBlPSJ0ZXh0IiBjbGFzcz0idmFsaWRhdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ibG9naW5fZmllbGQiIGNsYXNzPSJhY3RpdmUiPtCY0LzRjyDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y88L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZmllbGQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJwYXNzd29yZF9maWVsZCIgbmFtZT0icGFzc3dvcmQiIHR5cGU9InBhc3N3b3JkIiBjbGFzcz0idmFsaWRhdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icGFzc3dvcmRfZmllbGQiIGNsYXNzPSJhY3RpdmUiPtCf0LDRgNC+0LvRjDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzd2l0Y2giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg0JfQsNC/0L7QvNC90LjRgtGMINC80LXQvdGPCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJyZW1lbWJlcl9tZV9maWVsZCIgbmFtZSA9ICJyZW1lbWJlck1lIiB0eXBlPSJjaGVja2JveCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImxldmVyIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIHdhdmVzLWVmZmVjdCByaWdodCB3YXZlcy1saWdodCBncmVlbiBjb3Jwb3JhdGUtMiIgdHlwZT0ic3VibWl0IiBuYW1lPSJhY3Rpb24iPtCS0L7QudGC0Lg8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="12" hostname="learning2.pflb.ru:56902" path="/css/fonts/roboto/Roboto-Light.eot?" url="http://learning2.pflb.ru:56902/css/fonts/roboto/Roboto-Light.eot?" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1039" connectionId="2176" origin="ExtraRes" encodingType="ANSI" ordinal="2" startDateTime="2019-11-28T17:15:29.606+03:00" startTime="2477" endTime="2609" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="16" waitTime="1" receiveTime="114" sslNegotiateTime="-1" responseBodySize="21144">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData />
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings />
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnUtUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9jc3MvZm9udHMvcm9ib3RvL1JvYm90by1MaWdodC5lb3Q/IEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vbGVhcm5pbmcyLnBmbGIucnU6NTY5MDIvbG9naW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0OyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbw0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHJ1LVJVDQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogbGVhcm5pbmcyLnBmbGIucnU6NTY5MDINCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>20940</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Last-Modified" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vdm5kLm1zLWZvbnRvYmplY3Q7Y2hhcnNldD1VVEYtOA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjA5NDA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5tcy1mb250b2JqZWN0O2NoYXJzZXQ9VVRGLTgNCkNvbnRlbnQtTGVuZ3RoOiAyMDk0MA0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="13" hostname="learning2.pflb.ru:56902" path="/css/fonts/roboto/Roboto-Regular.eot?" url="http://learning2.pflb.ru:56902/css/fonts/roboto/Roboto-Regular.eot?" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1036" connectionId="2152" origin="ExtraRes" encodingType="ANSI" ordinal="3" startDateTime="2019-11-28T17:15:29.614+03:00" startTime="2485" endTime="2574" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="8" waitTime="72" receiveTime="8" sslNegotiateTime="-1" responseBodySize="21524">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData />
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings />
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnUtUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9jc3MvZm9udHMvcm9ib3RvL1JvYm90by1SZWd1bGFyLmVvdD8gSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9sZWFybmluZzIucGZsYi5ydTo1NjkwMi9sb2dpbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUtUlUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBsZWFybmluZzIucGZsYi5ydTo1NjkwMg0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>21320</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Last-Modified" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vdm5kLm1zLWZvbnRvYmplY3Q7Y2hhcnNldD1VVEYtOA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjEzMjA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5tcy1mb250b2JqZWN0O2NoYXJzZXQ9VVRGLTgNCkNvbnRlbnQtTGVuZ3RoOiAyMTMyMA0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>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</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="14" hostname="learning2.pflb.ru:56902" path="/css/fonts/roboto/Roboto-Medium.eot?" url="http://learning2.pflb.ru:56902/css/fonts/roboto/Roboto-Medium.eot?" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1038" connectionId="2168" origin="ExtraRes" encodingType="ANSI" ordinal="4" startDateTime="2019-11-28T17:15:29.622+03:00" startTime="2493" endTime="2593" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="1" waitTime="90" receiveTime="8" sslNegotiateTime="-1" responseBodySize="21568">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData />
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings />
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnUtUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9jc3MvZm9udHMvcm9ib3RvL1JvYm90by1NZWRpdW0uZW90PyBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2luDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgVHJpZGVudC83LjA7IHJ2OjExLjApIGxpa2UgR2Vja28NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBydS1SVQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IGxlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>21364</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Last-Modified" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vdm5kLm1zLWZvbnRvYmplY3Q7Y2hhcnNldD1VVEYtOA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjEzNjQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5tcy1mb250b2JqZWN0O2NoYXJzZXQ9VVRGLTgNCkNvbnRlbnQtTGVuZ3RoOiAyMTM2NA0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="15" hostname="learning2.pflb.ru:56902" path="/images/logo_2.png" url="http://learning2.pflb.ru:56902/images/logo_2.png" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1040" connectionId="2184" origin="ExtraRes" encodingType="ANSI" ordinal="5" startDateTime="2019-11-28T17:15:29.694+03:00" startTime="2564" endTime="2622" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="54" waitTime="0" receiveTime="2" sslNegotiateTime="-1" responseBodySize="187602">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnUtUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9pbWFnZXMvbG9nb18yLnBuZyBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2luDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgVHJpZGVudC83LjA7IHJ2OjExLjApIGxpa2UgR2Vja28NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBydS1SVQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IGxlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>187417</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Last-Modified" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aW1hZ2UvcG5nO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTg3NDE3</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGltYWdlL3BuZztjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMTg3NDE3DQpEYXRlOiBUaHUsIDI4IE5vdiAyMDE5IDE0OjE1OjMxIEdNVA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="16" hostname="learning2.pflb.ru:56902" path="/css/fonts/roboto/Roboto-Thin.eot?" url="http://learning2.pflb.ru:56902/css/fonts/roboto/Roboto-Thin.eot?" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1036" connectionId="2152" origin="ExtraRes" encodingType="ANSI" ordinal="6" startDateTime="2019-11-28T17:15:29.708+03:00" startTime="2579" endTime="2598" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="15" waitTime="0" receiveTime="4" sslNegotiateTime="-1" responseBodySize="21863">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData />
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings />
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnUtUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9jc3MvZm9udHMvcm9ib3RvL1JvYm90by1UaGluLmVvdD8gSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9sZWFybmluZzIucGZsYi5ydTo1NjkwMi9sb2dpbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUtUlUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBsZWFybmluZzIucGZsYi5ydTo1NjkwMg0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>21659</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Last-Modified" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vdm5kLm1zLWZvbnRvYmplY3Q7Y2hhcnNldD1VVEYtOA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjE2NTk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5tcy1mb250b2JqZWN0O2NoYXJzZXQ9VVRGLTgNCkNvbnRlbnQtTGVuZ3RoOiAyMTY1OQ0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="17" hostname="learning2.pflb.ru:56902" path="/css/fonts/roboto/Roboto-Bold.eot?" url="http://learning2.pflb.ru:56902/css/fonts/roboto/Roboto-Bold.eot?" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1037" connectionId="2160" origin="ExtraRes" encodingType="ANSI" ordinal="7" startDateTime="2019-11-28T17:15:29.713+03:00" startTime="2584" endTime="2618" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="15" waitTime="11" receiveTime="8" sslNegotiateTime="-1" responseBodySize="21170">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData />
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings />
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL2xlYXJuaW5nMi5wZmxiLnJ1OjU2OTAyL2xvZ2lu</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnUtUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9jc3MvZm9udHMvcm9ib3RvL1JvYm90by1Cb2xkLmVvdD8gSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9sZWFybmluZzIucGZsYi5ydTo1NjkwMi9sb2dpbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUtUlUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBsZWFybmluZzIucGZsYi5ydTo1NjkwMg0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>20966</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Last-Modified" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vdm5kLm1zLWZvbnRvYmplY3Q7Y2hhcnNldD1VVEYtOA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjA5NjY=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5tcy1mb250b2JqZWN0O2NoYXJzZXQ9VVRGLTgNCkNvbnRlbnQtTGVuZ3RoOiAyMDk2Ng0KRGF0ZTogVGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="18" hostname="learning2.pflb.ru:56902" path="/favicon.ico" url="http://learning2.pflb.ru:56902/favicon.ico" ip="94.159.69.182" port="56902" client_ip="192.168.14.221" client_port="1038" connectionId="2168" origin="ExtraRes" encodingType="ANSI" ordinal="8" startDateTime="2019-11-28T17:15:29.723+03:00" startTime="2594" endTime="2600" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="5" waitTime="0" receiveTime="0" sslNegotiateTime="-1" responseBodySize="16418">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="User-Agent" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnUtUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bGVhcm5pbmcyLnBmbGIucnU6NTY5MDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9mYXZpY29uLmljbyBIVFRQLzEuMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUtUlUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBsZWFybmluZzIucGZsYi5ydTo1NjkwMg0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>16219</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Last-Modified" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTYyMTk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyOCBOb3YgMjAxOSAxNDoxNTozMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVHVlLCAyNyBOb3YgMjAxOCAxNDowMzo0MyBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMTYyMTkNCkRhdGU6IFRodSwgMjggTm92IDIwMTkgMTQ6MTU6MzEgR01UDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>